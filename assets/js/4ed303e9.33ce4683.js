"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8273],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=u(n),f=o,m=p["".concat(c,".").concat(f)]||p[f]||d[f]||a;return n?r.createElement(m,i(i({ref:t},l),{},{components:n})):r.createElement(m,i({ref:t},l))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=f;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[p]="string"==typeof e?e:o,i[1]=s;for(var u=2;u<a;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},4610:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var r=n(7462),o=(n(7294),n(3905));const a={sidebar_position:1},i=void 0,s={unversionedId:"Frontend/React",id:"Frontend/React",title:"React",description:"useState is a Hook that lets you add React state to function components. It accepts an argument which is the initial state and returns an array of two items: the current state and a function that updates it.",source:"@site/docs/Frontend/React.md",sourceDirName:"Frontend",slug:"/Frontend/React",permalink:"/my-seadog-website/docs/Frontend/React",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Frontend/React.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"mainSidebar",previous:{title:"Frontend",permalink:"/my-seadog-website/docs/category/frontend"},next:{title:"web-component",permalink:"/my-seadog-website/docs/Frontend/web-component"}},c={},u=[],l={toc:u},p="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(p,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"useState is a Hook that lets you add React state to function components. It accepts an argument which is the initial state and returns an array of two items: the current state and a function that updates it."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"useState doesn't merge the state, it replaces the state"),(0,o.kt)("li",{parentName:"ol"},"useState will re-render the component")),(0,o.kt)("p",null,"useEffect is a Hook that lets you perform side effects in function components. It accepts a function that contains imperative, possibly effectful code."),(0,o.kt)("p",null,"useContext is a Hook that lets you subscribe to React context without introducing nesting."),(0,o.kt)("p",null,"useRef is a Hook that lets you keep mutable values around for the entire lifetime of the component. It\u2019s handy for getting access to DOM nodes or keeping values around between function calls."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"useRef doesn't trigger re-render"),(0,o.kt)("li",{parentName:"ol"},"use current to get the current value"),(0,o.kt)("li",{parentName:"ol"},"ideal candidate for storing mutable values that change over time, such as whether the component is mounted or not, or the previous value of a prop or state.\nex. ")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="useRef"',title:'"useRef"'},"const refContainer = useRef(0);\nrefContainer.current++;\n")))}d.isMDXComponent=!0}}]);